version: "3.8"
services:
  db:
    image: postgres:15
    container_name: recomendachka_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5433:5432

  redis:
    image: redis:7
    container_name: recomendachka_redis
    env_file:
      - .env
    ports:
      - 6379:6379
  
  recomendachka:
    image: recomendachka_app
    build:
      context: .
    container_name: recomendachka_app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    # Если не работает эта команда, используйте закомментированную
    command: ["/recomendachka/docker/app.sh"]
    # command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 7777:8000

  celery:
    image: recomendachka_celery
    build:
      context: .
    container_name: recomendachka_celery
    command: sh -c "celery --app=app.tasks.celery_app:celery_worker worker -l INFO"
    env_file:
      - .env
    depends_on:
      - redis

  celery_beat:
    image: recomendachka_celery
    build:
      context: . # celery это библиотека, у неё нет образа, берём из основного билда
    container_name: recomendachka_celery_beat
    # Если не работает эта команда, используйте закомментированную
    # command: ["/booking/docker/celery.sh", "celery_beat"] # Второй аргумен для if/elif в скрипте
    command: sh -c "celery --app=app.tasks.celery_app:celery_worker worker -l INFO -B"
    env_file:
      - .env
    depends_on:
      - redis

  flower:
    image: recomendachka_flower
    build:
      context: .
    container_name: recomendachka_flower
    command: sh -c "celery --app=app.tasks.celery_app:celery_worker flower"
    env_file:
      - .env
    depends_on:
      - redis
      - celery
    ports:
      - 5555:5555

networks:
  default:
    name: recomendachka_network

  # prometheus:
  #   image: prom/prometheus:v2.43.0
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheusdata:/prometheus
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090

  # grafana:
  #   image: grafana/grafana:9.4.7
  #   container_name: grafana
  #   volumes:
  #     - grafanadata:/var/lib/grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
      
volumes:
  postgresdata: